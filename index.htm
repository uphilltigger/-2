<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>飼料計算</title>
<style>
body { font-family: sans-serif; background-color: #f0f0f0; margin: 0; padding: 2rem; display: flex; flex-direction: column; align-items: center;}
h1 { font-size: 2rem; margin-bottom: 1rem; }
.container { background-color: #fff; padding: 1.5rem; border-radius: 1rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1); width: 100%; max-width: 1000px; }
label { display:block; margin-top:1rem; font-weight:bold; }
select, input { padding:0.3rem; margin:0.3rem 0; border-radius:0.25rem; border:1px solid #ccc; width:100%; box-sizing:border-box; }
table { width:100%; border-collapse: collapse; margin-top:1rem; }
th, td { border:1px solid #ccc; padding:0.5rem; text-align:left; }
thead { background-color:#eee; }
button { margin-top:1rem; padding:0.5rem 1rem; border:none; border-radius:0.25rem; background-color:#28a745; color:#fff; font-weight:bold; cursor:pointer; }
button:hover { background-color:#218838; }
.remove-btn { background-color:#dc3545; margin-left:0.5rem; }
.remove-btn:hover { background-color:#c82333; }
</style>
</head>
<body>

<h1>UPHILL TIGGER</h1>
<div class="container">
  <label>体重（kg）</label>
  <select id="weight">
    <option value="400">400</option>
    <option value="450">450</option>
    <option value="500" selected>500</option>
  </select>

  <label>運動強度</label>
  <select id="work">
    <option value="無">無</option>
    <option value="軽">軽</option>
    <option value="中" selected>中</option>
    <option value="強">強</option>
  </select>

<!--  <button id="add-feed">飼料を追加</button>  -->

  <table id="feed-table">
    <thead>
    <tr>
      <th>飼料名</th>
      <th>給与量1(kg)</th>
      <th>給与量2(kg)</th>
      <th>合計(kg)</th>
    </tr>
  </thead>
  <tbody id="feed-body"></tbody>
</table>

  <div id="result"></div>
</div>

<script>
// ?? 飼料データ
const feeds = [
  {name:"ビート", DE:2.85, CP:109, Lys:7.2, Ca:5.11, P:0.78, Mg:2.68, Na:1.04, K:4.16, Fe:519.6, Cu:9.27, Zn:27.71, Mn:53.69, Se:0, Co:0.2, VA:0, VD:0, VE:0},
  {name:"燕麦", DE:2.76, CP:106.58, Lys:5.6, Ca:0.45, P:3.01, Mg:1.22, Na:0.34, K:3.55, Fe:44.01, Cu:3.52, Zn:31.6, Mn:45.61, Se:0.05, Co:0.11, VA:5, VD:0, VE:4},
  {name:"ヘイキューブ", DE:1.8, CP:147, Lys:11.8, Ca:2.6, P:2.6, Mg:1.6, Na:22.4, K:446, Fe:8.2, Cu:24, Zn:34.8, Mn:0, Se:1.52, Co:0, VA:0, VD:0, VE:0},
  {name:"大豆粕", DE:13.13, CP:461, Lys:28.3, Ca:2.9, P:6.2, Mg:3.2, Na:0.3, K:0, Fe:18, Cu:56, Zn:0, Mn:0.45, Se:0, Co:0, VA:0, VD:0, VE:0},
  {name:"ベルテ", DE:2.52, CP:184.8, Lys:9.9, Ca:13.4, P:24.2, Mg:2.5, Na:12, K:13.4, Fe:563.42, Cu:133.63, Zn:331.66, Mn:206.02, Se:0, Co:0.53, VA:45866, VD:4080, VE:688},
  {name:"濃厚", DE:3.12, CP:144, Lys:7, Ca:31, P:12.3, Mg:2.2, Na:9.3, K:9.8, Fe:340.01, Cu:88.69, Zn:219.27, Mn:153.67, Se:1.21, Co:0.54, VA:29, VD:3, VE:865},
  {name:"ふすま", DE:2.68, CP:157, Lys:6.3, Ca:1.2, P:9.8, Mg:4.4, Na:0.8, K:0, Fe:11, Cu:70, Zn:0, Mn:0, Se:0, Co:0, VA:0, VD:0, VE:0},
  {name:"塩", DE:0, CP:0, Lys:0, Ca:0, P:0, Mg:0, Na:392, K:0, Fe:0, Cu:0, Zn:0, Mn:0, Se:0, Co:0, VA:0, VD:0, VE:0},
  {name:"乾草", DE:1.35, CP:57, Lys:2.7, Ca:0, P:0, Mg:0, Na:81.3, K:7.07, Fe:21.95, Cu:94.31, Zn:0, Mn:0.03, Se:0, Co:0, VA:75, VD:0, VE:0}
];

// ?? 要求量データ
const reqTable = [
  {weight:500, work:"無", DE:16.4, CP:656, Lys:28.21, Ca:20, P:14, Mg:7.5, Na:10, K:25, Fe:400, Cu:150, Zn:450, Mn:450, Se:1.88, Co:0.5, VA:20000, VD:3300, VE:800},
  {weight:500, work:"軽", DE:19.68, CP:787.2, Lys:33.85, Ca:30, P:18, Mg:9.05, Na:26.25, K:61.25, Fe:400, Cu:150, Zn:450, Mn:450, Se:2.19, Co:0.5, VA:20000, VD:3300, VE:800},
  {weight:500, work:"中", DE:22.96, CP:918.4, Lys:39.49, Ca:35, P:21, Mg:10.56, Na:26.25, K:61.25, Fe:450, Cu:168.75, Zn:506.25, Mn:506.25, Se:2.81, Co:0.56, VA:22500, VD:3300, VE:900},
  {weight:500, work:"強", DE:26.24, CP:1049.6, Lys:45.13, Ca:40, P:29, Mg:12.07, Na:33.75, K:78.75, Fe:500, Cu:187.5, Zn:562.5, Mn:562.5, Se:3.13, Co:0.63, VA:25000, VD:3300, VE:1000},
  {weight:450, work:"無", DE:14.9, CP:596, Lys:25.63, Ca:18, P:12.6, Mg:6.75, Na:9, K:22.5, Fe:360, Cu:135, Zn:405, Mn:405, Se:1.69, Co:0.45, VA:18000, VD:2970, VE:720},
  {weight:450, work:"軽", DE:17.88, CP:715.2, Lys:30.75, Ca:27, P:16.2, Mg:8.22, Na:23.63, K:55.13, Fe:360, Cu:135, Zn:405, Mn:405, Se:1.97, Co:0.45, VA:18000, VD:2970, VE:720},
  {weight:450, work:"中", DE:20.86, CP:834.4, Lys:35.88, Ca:31.5, P:18.9, Mg:9.6, Na:23.63, K:55.13, Fe:405, Cu:151.88, Zn:455.63, Mn:455.63, Se:2.53, Co:0.51, VA:20250, VD:2970, VE:810},
  {weight:400, work:"無", DE:13.4, CP:536, Lys:23.05, Ca:16, P:11.2, Mg:6, Na:8, K:20, Fe:320, Cu:120, Zn:360, Mn:360, Se:1.5, Co:0.4, VA:16000, VD:2640, VE:640},
  {weight:400, work:"軽", DE:16.08, CP:643.2, Lys:27.66, Ca:24, P:14.4, Mg:7.4, Na:21, K:49, Fe:320, Cu:120, Zn:360, Mn:360, Se:1.75, Co:0.4, VA:16000, VD:2640, VE:640},
  {weight:400, work:"中", DE:18.76, CP:750.4, Lys:32.27, Ca:28, P:16.8, Mg:8.63, Na:21, K:49, Fe:360, Cu:135, Zn:405, Mn:405, Se:2.25, Co:0.45, VA:18000, VD:2640, VE:720}
];

function getRequirements(weight, work){
  const nearestWeight = reqTable.reduce((a,b)=>Math.abs(b.weight-weight)<Math.abs(a.weight-weight)?b:a).weight;
  const found=reqTable.find(r=>r.weight===nearestWeight && r.work===work);
  return found||reqTable[0];
}

//  飼料
function createRows(){
  const feedBody = document.getElementById("feed-body");
feeds.forEach(f=>{
  const row = document.createElement("tr");
  row.innerHTML =`
    <td>${f.name}</td>
    <td><input type="number" class="feed-amount1" value="0"></td>
    <td><input type="number" class="feed-amount2" value="0"></td>
    <td><input type="number" class="feed-total" value="0" readonly></td>
  `;

  feedBody.appendChild(row);

  const input1 = row.querySelector(".feed-amount1");
  const input2 = row.querySelector(".feed-amount2");
  const total = row.querySelector(".feed-total");

  function updateTotal(){
    total.value = ((parseFloat(input1.value||0) + parseFloat(input2.value||0))*2).toFixed(1);
    calculate();
  }

  input1.addEventListener("input", updateTotal);
  input2.addEventListener("input", updateTotal);
  updateTotal();
});

// ?? 計算関数
function calculate(){
  const weight = parseInt(document.getElementById("weight").value);
  const work = document.getElementById("work").value;
  const req = getRequirements(weight, work);

  let sum = {DE:0, CP:0, Lys:0, Ca:0, P:0, Mg:0, Na:0, K:0, Fe:0, Cu:0, Zn:0, Mn:0, Se:0, Co:0, VA:0, VD:0, VE:0};
  document.querySelectorAll("#feed-body tr").forEach(tr=>{
    const feedName = tr.querySelector(".feed-select").value;
    const total = parseFloat(tr.querySelector(".feed-total").value||0);
    const feed = feeds.find(f=>f.name===feedName);
    for(const key in sum){
      sum[key]+=feed[key]*total;
    }
  });

  // 充足率
  let html="<h2>充足率</h2><table><thead><tr>";
  for(const key in sum) html+="<th>"+key+"</th>";
  html+="</tr></thead><tbody><tr>";
  for(const key in sum){
    const rate = (sum[key]/req[key]*100).toFixed(1);
    let color="black";
    if(rate>120) color="red";
    else if(rate<80) color="blue";
    html+=`<td style="color:${color}">${rate}%</td>`;
  }
  html+="</tr></tbody></table>";
  document.getElementById("result").innerHTML=html;
}

// ?? 初期表示と追加ボタン
window.onload = createRows;
document.getElementById("add-feed").onclick = ()=>addFeedRow();
document.getElementById("weight").onchange = calculate;
document.getElementById("work").onchange = calculate;


</script>

</body>
</html>





